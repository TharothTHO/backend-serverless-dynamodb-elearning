service: learn-serverless

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  environment:
    LESSONS_TABLE_NAME: ${self:custom.ElearningTable.name}
    LESSONS_BUCKET_NAME: ${self:custom.LessonsBucket.name}
  iamRoleStatements:
    - ${file(iam/ElearningTableIAM.yml):ElearningTableIAM}
    - ${file(iam/LessonsBucketIAM.yml):LessonsBucketIAM}
  
resources:
  Resources:
    ElearningTable: ${file(resources/ElearningTable.yml):ElearningTable}
    LessonsBucket: ${file(resources/LessonsBucket.yml):LessonsBucket}
    LessonsBucketPolicy: ${file(resources/LessonsBucket.yml):LessonsBucketPolicy}

functions:
  createLesson:
    handler: src/handlers/createLesson.handler
    events:
      - http:
          method: POST
          path: /create

  getLessons:
    handler: src/handlers/getLessons.handler
    events:
      - http:
          method: GET
          path: /lessons

  getLesson:
    handler: src/handlers/getLesson.handler
    events:
      - http:
          method: GET
          path: /lessons/{id}

  updateLesson:
    handler: src/handlers/updateLesson.handler
    events:
      - http:
          method: PATCH
          path: /lessons/{id}

  deleteLesson:
    handler: src/handlers/deleteLesson.handler
    events:
      - http:
          method: DELETE
          path: /lessons/{id}

  uploadLessonPicture:
    handler: src/handlers/uploadLessonPicture.handler
    events:
      - http:
          method: PATCH
          path: /lessons/{id}/picture

custom:
  ElearningTable:
    name: !Ref ElearningTable
    arn: !GetAtt ElearningTable.Arn
  LessonsBucket:
    name: lessons-bucket-dvhgv766dg-${self:provider.stage}
          
